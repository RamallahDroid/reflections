How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By showing the code that was changed inside the file, that make it clear that this specific code introduced the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    That will make detecting the bugs, and understanding the implementation of a feature that was introduced by a one commit is much easier task.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Choosing when to add a commit, give you the ability to make a commit for specific reason, like adding a feature, or fixing a bug. This way it's easier to navigate the history of each file. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git allow saving mutiple files in one commit because a logical change could affect more than one file, so it's important to have this feature. While Google Docs treat each file seperatley, to make it easier for the users and don't bother them with thinking when to commit, so they keep it simple.

How can you use the commands git log and git diff to view the history of files?

    Using git log we get the history of all the commits, and to understnd the changes introduced by a commit we use the git diff between the commit and its previuos one.

How might using version control make you more confident to make changes that
could break something?

    When you use a version control, you can check anytime and review the code that introduced the problem, and fix it.

Now that you have your workspace set up, what do you want to try using Git for?

    Commit my reflections.