What happens when you initialize a repository? Why do you need to do it?

	When you initialize the rep. you create the git files needed to keep track for the files inside the rep. and the differnent commits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	
	staging area gives a temporary place for multiple changes before sending the commit to the repository

How can you use the staging area to make sure you have one commit per logical
change?

	Each change that's made can be put in the staging area, untill a logical change completes, then you send the commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When you want to create a differnt version of your file, and still you want to keep the existing version, that;s where the branches come with solution. You just create a new branch with te new version, and you switch back to the other version whenever you want.

How do the diagrams help you visualize the branch structure?

	It help you to know the commit history visible from each branch, and give you an idea of unreachable commits from certain branch. 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	The result is the two editions of the file gathered in one file. We represent it in the diagram as a commit pointing to the previous two versions of te file, in that way we can compare to any of the previos commits, and view the history of commits back from the merging commit.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually? 

	pros: When Git do the merging it saves a lot of time and effort to do the merging process.
	cons: A conflict should be handled manually.